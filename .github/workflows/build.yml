name: build
on:
  push:
    branches:
      - master
      - main
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: pip install cwltool
      - run: cwltool --validate app-package.cwl#s2-composites

  containers:
   
    needs: validate
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq 
        env:
          VERSION: v4.2.0
          BINARY: yq_linux_amd64
      - run: chmod +x /usr/bin/yq
      - run: echo "APP_VERSION=$( yq e '."s:softwareVersion"' app-package.cwl | tr -d "\n" )" >> $GITHUB_ENV
      - run: echo $APP_VERSION
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: build & push crop image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/crop
          docker build src --file src/crop/Dockerfile --tag crop
          docker tag crop $IMAGE_ID:$APP_VERSION
          docker push $IMAGE_ID:$APP_VERSION
      - name: build & push composite image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/composite
          docker build src --file src/crop/Dockerfile --tag composite
          docker tag composite $IMAGE_ID:$APP_VERSION
          docker push $IMAGE_ID:$APP_VERSION
  publish:

    needs: containers
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq 
        env:
          VERSION: v4.2.0
          BINARY: yq_linux_amd64
      - run: chmod +x /usr/bin/yq
      - run: yq -i eval '(.$graph[] | select (.id == "crop-cl") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/cwl-for-eo/app-package-04/crop:1.0.0"' app-package.cwl 
      - run: yq -i eval '(.$graph[] | select (.id == "composite-cl") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/cwl-for-eo/app-package-04/composite:1.0.0"' app-package.cwl 
      - run: mkdir downloads
      - name: set_version
        id: set_version
        run: |
          echo "APP_VERSION=$( yq e '."s:softwareVersion"' app-package.cwl | tr -d "\n" )" >> $GITHUB_ENV
          echo "::set-output name=APP_VERSION::$APP_VERSION"
      - run: cp app-package.cwl downloads/app-s2-composites.$APP_VERSION.cwl
      - uses: actions/upload-artifact@v2
        with: 
          name: application-package
          path: downloads
      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: downloads/app-s2-composites*.cwl
          asset_name: application-package
          tag: ${{ steps.set_version.outputs.APP_VERSION }}
          overwrite: true
          file_glob: true
          body: "Application package app-s2-composites.${{ steps.set_version.outputs.APP_VERSION }}.cwl"