name: build
on:
  push:
    branches:
      - master
      - main
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: pip install cwltool
      - run: cwltool --validate app-package.cwl#s2-composites

  version:
    needs: validate

    runs-on: ubuntu-latest

    outputs:

      output1: ${{ steps.step1.set-version.version }}

    steps:
      - uses: actions/checkout@v2
      - run: wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/bin/yq 
        env:
          VERSION: v4.2.0
          BINARY: yq_linux_amd64
      - run: chmod +x /usr/bin/yq
     # - run: echo "APP_VERSION=$( yq e '."s:softwareVersion"' app-package.cwl | tr -d "\n" )" >> $GITHUB_ENV
      - id: set-version
        run: echo "::set-output name=version::$APP_VERSION"

  containers:
   
    needs: version
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: echo "version: ${{needs.version.outputs.version}}"
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: build & push crop image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/crop
          docker build src --file src/crop/Dockerfile --tag crop
          docker tag crop $IMAGE_ID:${{needs.version.outputs.version}}
          docker push $IMAGE_ID:${{needs.version.outputs.version}}
      - name: build & push composite image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/composite
          docker build src --file src/composite/Dockerfile --tag composite
          docker tag composite $IMAGE_ID:${{needs.version.outputs.version}}
          docker push $IMAGE_ID:${{needs.version.outputs.version}}

  publish:

    needs: 
      - containers
      - version

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: yq -i eval '(.$graph[] | select (.id == "crop-cl") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/cwl-for-eo/app-package-04/crop:${{needs.version.outputs.version}}"' app-package.cwl 
      - run: yq -i eval '(.$graph[] | select (.id == "composite-cl") ).requirements.DockerRequirement.dockerPull = "docker.pkg.github.com/cwl-for-eo/app-package-04/composite:${{needs.version.outputs.version}}"' app-package.cwl 
      - run: mkdir downloads
      - run: cp app-package.cwl downloads/app-s2-composites.${{needs.version.outputs.version}}.cwl
      - run: ls downloads/app-s2-composites.${{needs.version.outputs.version}}.cwl
      - uses: actions/upload-artifact@v2
        with: 
          name: application-package
          path: downloads
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{needs.version.outputs.version}}
          tag_name: ${{needs.version.outputs.version}}
          #body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: downloads/app-s2-composites.${{needs.version.outputs.version}}.cwl
          asset_name: app-s2-composites.${{needs.version.outputs.version}}.cwl
          asset_content_type: text/yaml